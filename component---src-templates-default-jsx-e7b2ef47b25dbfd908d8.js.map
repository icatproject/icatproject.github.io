{"version":3,"file":"component---src-templates-default-jsx-e7b2ef47b25dbfd908d8.js","mappings":"oKAqBA,SAASA,EAAGC,GAA8C,IAA7C,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAUJ,EACrD,MAAQC,MAAOI,EAAcH,YAAaI,EAAkB,QAAEC,IANjDC,EAAAA,EAAAA,gBAZG,cAcJC,KAAKC,aAMXC,EAAM,CACVV,MAAO,GAAGA,OAAWI,KAAkBA,EACvCH,YAAaA,GAAeI,EAC5BM,IAAK,GAAGL,IAAUJ,EAASU,UAAY,MAGzC,OACEC,EAAAA,EAAAA,GAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,GAAA,aAAQH,EAAIV,QACZa,EAAAA,EAAAA,GAAA,QAAME,KAAK,cAAcC,QAASN,EAAIT,eACtCY,EAAAA,EAAAA,GAAA,QAAME,KAAK,WAAWC,QAAShB,KAC/Ba,EAAAA,EAAAA,GAAA,QAAME,KAAK,iBAAiBC,QAASN,EAAIT,eACzCY,EAAAA,EAAAA,GAAA,QAAME,KAAK,UAAUC,QAAQ,aAC7BH,EAAAA,EAAAA,GAAA,QAAME,KAAK,2BAA2BC,QAAQ,gDAC7Cb,IAAYU,EAAAA,EAAAA,GAAA,QAAME,KAAK,WAAWC,QAASb,EAASc,KAAK,QAGhE,CAEAnB,EAAIoB,aAAe,CACjBf,SAAU,GACVF,iBAAakB,GAYf,K,6GCrDoC,IAAApB,EAAA,CAAAgB,KAAA,UAAAK,OAAA,2DAqBpC,UAnBA,SAAwBC,GAAY,IAAX,KAAEC,GAAMD,EAC/B,MAAME,EAAOD,EAAKE,eAClB,OACEX,EAAAA,EAAAA,GAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,GAAA,MACEY,IAAG1B,GAMFwB,EAAKG,YAAY1B,QAGpBa,EAAAA,EAAAA,GAAA,OAAKc,wBAAyB,CAAEC,OAAQL,EAAKM,QAGnD,EA8BO,SAASC,EAAIC,GAAqB,IAApB,KAAET,KAASU,GAAMD,EACpC,OACElB,EAAAA,EAAAA,GAACf,EAAAA,GACCmC,EAAAA,EAAAA,GAAA,CACAjC,MAAOsB,EAAKE,eAAeE,YAAY1B,MACvCG,SAAU,CACR,OACA,YACA,gBACA,iBACA,eACA,iBACA,eACA,qBACA,mBACA,eACA,kBAGE6B,GAGV,C","sources":["webpack://icatproject.github.io/./src/components/seo.jsx","webpack://icatproject.github.io/./src/templates/default.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(detailsQuery);\n\n  return data.site.siteMetadata;\n};\n\nfunction SEO({ title, description, location, keywords }) {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata();\n\n  const seo = {\n    title: `${title} | ${defaultTitle}` || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${location.pathname || ''}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={seo.description} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"google-site-verification\" content=\"9X6CrnxO5Y0COmvYo15fcva3BeU-Qd8XSu5xWV44EDM\" />\n      {keywords && <meta name=\"keywords\" content={keywords.join(', ')} />}\n    </>\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  description: undefined,\n};\n\nSEO.propTypes = {\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { css } from '@emotion/react';\nimport SEO from '../components/seo';\n\nfunction DefaultTemplate({ data }) {\n  const post = data.markdownRemark;\n  return (\n    <>\n      <h1\n        css={css`\n          font-weight: 300;\n          text-transform: uppercase;\n          font-size: 33px;\n        `}\n      >\n        {post.frontmatter.title}\n      </h1>\n      {/* eslint-disable-next-line react/no-danger */}\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </>\n  );\n}\n\nexport default DefaultTemplate;\n\nexport const query = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`;\n\nDefaultTemplate.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      html: PropTypes.string.isRequired,\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        date: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\n// can't use proptypes with special Gatsby Head component, so just ignore\n// eslint-disable-next-line react/prop-types\nexport function Head({ data, ...rest }) {\n  return (\n    <SEO\n      // eslint-disable-next-line react/prop-types\n      title={data.markdownRemark.frontmatter.title}\n      keywords={[\n        'ICAT',\n        'ICAT data',\n        'ICAT metadata',\n        'ICAT catalogue',\n        'ICAT catalog',\n        'data catalogue',\n        'data catalog',\n        'metadata catalogue',\n        'metadata catalog',\n        'ICAT project',\n        'ICAT software',\n      ]}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    />\n  );\n}\n"],"names":["SEO","_ref","title","description","location","keywords","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","pathname","___EmotionJSX","React","name","content","join","defaultProps","undefined","styles","_ref2","data","post","markdownRemark","css","frontmatter","dangerouslySetInnerHTML","__html","html","Head","_ref3","rest","_extends"],"sourceRoot":""}