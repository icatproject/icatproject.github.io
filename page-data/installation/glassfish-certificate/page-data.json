{"componentChunkName":"component---src-templates-default-jsx","path":"/installation/glassfish-certificate/","result":{"data":{"markdownRemark":{"html":"<h1>Installing a TERENA (Comodo) Multi-Domain SSL Certificate in Glassfish</h1>\n<p><strong>IMPORTANT NOTES BEFORE YOU START:</strong></p>\n<p>The Glassfish 4 admin console (on port 4848 by default) does not appear\nto run on a Terena certificate, due to the following bug:</p>\n<p><a href=\"https://java.net/jira/browse/GLASSFISH-20993\">https://java.net/jira/browse/GLASSFISH-20993</a></p>\n<p>This did work previously in Glassfish 3, although similar problems have\nbeen reported using Glassfish 3.</p>\n<p>To work around this, the admin console should be left to run using the\nself-signed \"s1as\" certificate and you should modify your https settings\n(typically http-listener-2) to use the \"Certificate NickName\" you use\nwhen importing it into the Glassfish keystore.</p>\n<p>The password on the certificate you import into the Glassfish keystore\nMUST match the password on the Java keystore itself.</p>\n<p><strong>Assumptions:</strong></p>\n<p>These instructions assume you have received a zip file containing the\nfollowing files (or similar):</p>\n<ul>\n<li>Root CA Certificate -- AddTrustExternalCARoot.crt</li>\n<li>Intermediate CA Certificate -- UTNAddTrustServer_CA.crt</li>\n<li>Intermediate CA Certificate -- TERENASSLCA.crt</li>\n<li>Your TERENA Multi-Domain SSL Certificate -- 13669092.crt</li>\n</ul>\n<p>You also need to have the key file which you used to generate the\nCertificate Signing Request.</p>\n<p><strong>Instructions:</strong></p>\n<p>Create a certificate chain file:</p>\n<pre><code>cat AddTrustExternalCARoot.crt UTNAddTrustServer_CA.crt TERENASSLCA.crt > cert-chain.txt\n</code></pre>\n<p>Create a PKCS12 file containing your certificate and the certificate\nchain:</p>\n<ul>\n<li>Ensure that you set a password of 6 or more characters.</li>\n<li>This needs to match the password on your Glassfish keystore.jks</li>\n<li>If the password on your Glassfish keystore is still the default\n(\"changeit\") then set a new password on the p12 file and change the\npassword on the Glassfish keystore as shown further down.</li>\n</ul>\n<!-- -->\n<pre><code>openssl pkcs12 -export -out myserver.p12 -inkey myserver.key -name myserver-terena -chain -CAfile cert-chain.txt &#x3C;13669092.crt\n</code></pre>\n<p>where \"myserver.key\" is the key file used to generate the Certificate\nSigning Request,</p>\n<p>and \"myserver-terena\" is an alias/nickname given to the certificate</p>\n<p>You can inspect the contents of the p12 file using the Java keytool\napplication:</p>\n<pre><code>keytool -v -list -storetype pkcs12 -keystore myserver.p12\n</code></pre>\n<p>Locate your Glassfish keystore. This will be located in the config\ndirectory of the domain you are running eg:</p>\n<pre><code>~/glassfish4/glassfish/domains/domain1/config/keystore.jks\n</code></pre>\n<p>You can confirm this by looking for the following setting reported in\nthe Glassfish server.log upon startup:</p>\n<pre><code>-Djavax.net.ssl.keyStore=\n</code></pre>\n<p>Import the contents of the p12 file into your Glassfish keystore:</p>\n<pre><code>keytool -importkeystore -srckeystore myserver.p12 -srcstoretype pkcs12 -destkeystore keystore.jks -deststoretype jks -v\n</code></pre>\n<p>You can inspect the contents of keystore.jks and you should see an entry\ncalled \"myserver-terena\":</p>\n<pre><code>keytool -list -keystore keystore.jks\n</code></pre>\n<p>Adding the --v option to this will show you all the details of the\ncertificates, including the certificate chain.</p>\n<p>If you need to change the password on the Glassfish keystore, make sure\nthe server is NOT running and then:</p>\n<pre><code>asadmin change-master-password --savemasterpassword=true domain1\n</code></pre>\n<p>This MUST be set to the same password you set when creating the p12\nfile.</p>\n<p>Start the server and load the Glassfish admin console at:\n<a href=\"https://www.myserver.com:4848\">https://www.myserver.com:4848</a></p>\n<p>Open \"Configurations\" > server-config > Network Config > Network\nListeners > http-listener-2</p>\n<p>Verify in the \"General\" tab that this is the https listener (typically\nport 8181).</p>\n<p>Select the \"SSL\" tab and enter \"myserver-terena\" as the Certificate\nNickName.</p>\n<p>To check the setup is correct, point a web browser to\n<a href=\"https://www.myserver.com:8181\">https://www.myserver.com:8181</a></p>\n<p>You should not get any errors or warnings about the authenticity of the\nweb server's certificate.</p>\n<p>Clicking on the padlock icon at the top of your browser, you should be\nable to see the certificate details and the certification path.</p>\n<p>If your server's https port is open to the internet, then use a service\nsuch as the following to validate the certificate:</p>\n<p><a href=\"http://www.sslshopper.com/ssl-checker.html\">http://www.sslshopper.com/ssl-checker.html</a></p>\n<p>If you did NOT add the complete certificate chain when creating the p12\nfile, then this utility will report that the certificate chain is not\ncomplete and it will not be trusted in all web browsers.</p>\n<p>If you have followed the instructions above then the complete\ncertificate chain should be reported.</p>","frontmatter":{"title":"Glassfish certificate","date":null}}},"pageContext":{"slug":"/installation/glassfish-certificate/"}},"staticQueryHashes":["2186722355","3212510956","3248290905","3649515864","4121107168"],"slicesMap":{}}