{"componentChunkName":"component---src-templates-default-jsx","path":"/installation/glassfish/","result":{"data":{"markdownRemark":{"html":"<h1>JDK</h1>\n<p>Get the latest stable jdk for your architecture as part of the OS\ndistribution or from from the Oracle web site (where it is known as Java\nSE and you want the JDK download).</p>\n<p><strong>You must use at least JDK 1.8.</strong></p>\n<p>You need to ensure that it is in the PATH of the person running glassfish.\nYou should ensure that java, javac, jps, keytool etc are all available.</p>\n<h1>Glassfish</h1>\n<p>Designate an account for running glassfish. This is called here \"the\nglassfish account\" though the user name does not have to be glassfish.\nIt is recommended to obtain the platform independent zip file (without\njdk) and unpack it into the home directory of the glassfish account.\nAvoid using installers. After unpacking add the bin directory to the\nPATH of the user as indicated in the table below. Glassfish 4.0 is\ncurrently recommended.</p>\n<table>\n<thead>\n<tr>\n<th>Tested distribution</th>\n<th>PATH component</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>glassfish-4.0.zip</td>\n<td>~/glassfish4/bin</td>\n</tr>\n</tbody>\n</table>\n<p>Ensure that <code>hostname -f</code> returns a sensible result.</p>\n<h2>Scripted setup</h2>\n<p>Then run <a href=\"https://raw.githubusercontent.com/icatproject/icat.utils/master/src/main/scripts/setup-glassfish.py\">setup-glassfish.py</a>\nwhich takes as arguments the name of the domain you wish to create, the amount\nof memory to allow for the Java heap in glassfish and optionally a\npassword. If you don't specify a password you will be prompted for it\nonce without echoing. To use 75% of the available memory specify 75% as\nthe second parameter otherwise write 2048m or, equivalently 2g. For the\nscript to work properly the glassfish default ports should all be\navailable.</p>\n<p>Note that there was an error in this script which prevented Glassfish\n4.1.1 being used. So make sure you use an up to date copy.</p>\n<p>If you wish, go to <a href=\"http://localhost:4848/\">http://localhost:4848</a> you\nwill be redirected to https and will be able to login as admin to see\nfrom the GUI how the server is configured.</p>\n<h2>Manual setup</h2>\n<p>As an alternative to running the script you can issue the commands\nwithin that script manually.  When you create the domain you will be\nasked to specify the admin username and password. Do not use the default\nempty password.</p>\n<h2>Deployment Order</h2>\n<p>Since glassfish 4 it is has been possible to specify a deployment order\nfor applications deployed within glassfish. This can ensure that, for\nexample, authenticators are deployed before ICAT. The default sequence\nnumber is 100 and components with a lower deployment order will be\nstarted before those with a higher value. New releases of ICAT\ncomponents will deploy authenticators, icat, ids and ijp as 80, 100, 120\nand 140 respectively. There is also a script: <a href=\"/misc/scripts/fix-deployment-order.py\">fix-deployment-order.py</a>\nwhich may be used on existing deployments of glassfish 4.</p>\n<h2>Firewalls</h2>\n<p>Depending upon your installation it is possible that the ports normally\nused by glassfish (4848 and 8181) are blocked. If this is the case allow\nthe ports to be used. How you do this is platform dependent.</p>\n<h2>Proxies</h2>\n<p>To allow  Glassfish to make use of a web proxy when making outgoing\ncalls use asadmin to identify the host and port to be used. For example:</p>\n<pre><code>asadmin create-jvm-options -Dhttp.proxyHost=wwwcache.rl.ac.uk\n\n\n\nasadmin create-jvm-options -Dhttp.proxyPort=8080\n</code></pre>\n<h2>Certificates</h2>\n<p>If you have a \"genuine\" SSL certificate from a trusted provider to\ninstall, follow the instructions\nat: <a href=\"/installation/glassfish-certificate/\" title=\"Certificate\">certificate</a>.</p>\n<p>If you don't have a trusted certificate then any java application\nseeking to use the glassfish will need to be told to trust it. Go to the\nconfig directory for your domain and:</p>\n<pre><code>keytool -export -keystore keystore.jks -file cert.der -storepass changeit -alias s1as\n</code></pre>\n<p>will extract the certificate to a file called cert.der. The keystore\npassword is by default \"changeit\". Then go to the jre/lib/security\ndirectory for the jdk you will use and if jssecacerts does not exist:</p>\n<pre><code>cp cacerts jssecacerts\n</code></pre>\n<p>which leaves the original cacerts unchanged. However jssecacerts will be\nused in preference to cacerts. Then:</p>\n<pre><code>keytool -import -keystore jssecacerts -file &#x3C;cert.der> -storepass changeit -alias &#x3C;full host name> -noprompt\n</code></pre>\n<p>where <code>&#x3C;cert.der></code> identifies the exported certificate and the\nrecommended alias is the fully qualified name of the machine you are\ntrusting.</p>\n<p>You may also choose to convert the certificate to pem format for use\nwith a Python client:</p>\n<pre><code>openssl x509 -in cert.der -inform der -out cert.pem\n</code></pre>\n<h2>Expired certificates</h2>\n<p>Expired cacerts appear to do not harm except for cluttering the\nserver.log. To get rid of them go to the config directory for your\ndomain and:</p>\n<pre><code>keytool -delete -keystore cacerts.jks -alias gtecybertrustglobalca -storepass changeit\n\n\n\nkeytool -delete -keystore cacerts.jks -alias gtecybertrust5ca -storepass changeit\n</code></pre>\n<p>for each offending certificate. The keystore password is by default\n<em>changeit</em>.</p>\n<h2>Database connectors</h2>\n<p>Your chosen database jars must be installed in the lib/ext directory of\nyour domain. These files will have names such as:\n<em>mysql-connector-java-5.1.21-bin.jar</em> (for MySQL) and <em>ojdbc6.jar</em> (for\nOracle). After installing these jars glassfish must be restarted. It is\nrecommended to use asadmin stop-domain followed by asadmin start-domain\nto achieve this.</p>\n<h2>Problems starting glassfish</h2>\n<p>In some circumstances glassfish may refuse to start. A series of dots\nwill appear on the screen and after about four rows will time out. This\nis less likely to occur with Glassfish 4 provided that deployment orders\nare sensible. To get round this problem:</p>\n<ul>\n<li>determine which is the bad component by looking at the end of the\nserver.log to see what it is was trying to load</li>\n<li>edit domain.xml in the config directory -- find the line in the\nsection</li>\n</ul>\n<!-- -->\n<pre><code>  &#x3C;servers>\n\n\n\n    &#x3C;server>\n</code></pre>\n<p>starting with &#x3C;application-ref ref=\"... for the troublesome component\nand disable it it by inserting \"enabled=\"false\" so that the line now\nstarts: <em>&#x3C;application-ref \"enabled=\"false\" ref=\"...</em></p>\n<ul>\n<li>start the domain with <code>asadmin start-domain ...</code></li>\n<li>enable the component with <code>asadmin enable ...</code></li>\n</ul>\n<p>To avoid the problem if you need to stop and start the domain, disable\nthe troublesome component before stopping it and enable it after\nstarting the domain.</p>","frontmatter":{"title":"Glassfish","date":null}}},"pageContext":{"slug":"/installation/glassfish/"}},"staticQueryHashes":["2186722355","3212510956","3248290905","3649515864","4121107168"],"slicesMap":{}}